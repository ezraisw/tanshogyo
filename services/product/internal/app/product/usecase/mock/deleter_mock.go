// Code generated by MockGen. DO NOT EDIT.
// Source: deleter.go

// Package usecasemock is a generated GoMock package.
package usecasemock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProductDeleter is a mock of ProductDeleter interface.
type MockProductDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockProductDeleterMockRecorder
}

// MockProductDeleterMockRecorder is the mock recorder for MockProductDeleter.
type MockProductDeleterMockRecorder struct {
	mock *MockProductDeleter
}

// NewMockProductDeleter creates a new mock instance.
func NewMockProductDeleter(ctrl *gomock.Controller) *MockProductDeleter {
	mock := &MockProductDeleter{ctrl: ctrl}
	mock.recorder = &MockProductDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductDeleter) EXPECT() *MockProductDeleterMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockProductDeleter) Delete(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockProductDeleterMockRecorder) Delete(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockProductDeleter)(nil).Delete), ctx, id)
}
