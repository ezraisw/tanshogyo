// Code generated by MockGen. DO NOT EDIT.
// Source: authedcreator.go

// Package usecasemock is a generated GoMock package.
package usecasemock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	usecase "github.com/ezraisw/tanshogyo/services/product/internal/app/product/usecase"
)

// MockProductAuthedCreator is a mock of ProductAuthedCreator interface.
type MockProductAuthedCreator struct {
	ctrl     *gomock.Controller
	recorder *MockProductAuthedCreatorMockRecorder
}

// MockProductAuthedCreatorMockRecorder is the mock recorder for MockProductAuthedCreator.
type MockProductAuthedCreatorMockRecorder struct {
	mock *MockProductAuthedCreator
}

// NewMockProductAuthedCreator creates a new mock instance.
func NewMockProductAuthedCreator(ctrl *gomock.Controller) *MockProductAuthedCreator {
	mock := &MockProductAuthedCreator{ctrl: ctrl}
	mock.recorder = &MockProductAuthedCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductAuthedCreator) EXPECT() *MockProductAuthedCreatorMockRecorder {
	return m.recorder
}

// AuthedCreate mocks base method.
func (m *MockProductAuthedCreator) AuthedCreate(ctx context.Context, userId string, form usecase.AuthedProductForm) (usecase.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthedCreate", ctx, userId, form)
	ret0, _ := ret[0].(usecase.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthedCreate indicates an expected call of AuthedCreate.
func (mr *MockProductAuthedCreatorMockRecorder) AuthedCreate(ctx, userId, form interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthedCreate", reflect.TypeOf((*MockProductAuthedCreator)(nil).AuthedCreate), ctx, userId, form)
}
